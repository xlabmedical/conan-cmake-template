cmake_policy(SET CMP0025 NEW)
cmake_policy(SET CMP0091 NEW)
cmake_minimum_required(VERSION 3.20)

project(conan-cmake-template LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")

include(conan-setup)
set(CONAN_FILE_NAME "${CMAKE_CURRENT_LIST_DIR}/conanfile.py")
file(SHA256 ${CONAN_FILE_NAME} CONAN_FILE_HASH)
if(CONAN_FILE_HASH STREQUAL CONAN_FILE_HASH_CACHE)
	if(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/conan_paths.cmake)
		include(${CMAKE_CURRENT_BINARY_DIR}/conan_paths.cmake)
	endif()
	set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${CMAKE_CURRENT_BINARY_DIR})
else()
	set_conan_deps()
	set(CONAN_FILE_HASH_CACHE ${CONAN_FILE_HASH} CACHE STRING "SHA256 hash of the conanfile" FORCE)
endif()

find_package(Eigen3 CONFIG REQUIRED)

add_executable(${CMAKE_PROJECT_NAME} main.cpp)
target_link_libraries(${CMAKE_PROJECT_NAME} Eigen3::Eigen)